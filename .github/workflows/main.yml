name: VyOS Nightly Build

on:
  workflow_dispatch:
    inputs:
      gcp_project_id:
        description: "GCP Project ID where the image will be uploaded"
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: ${{ github.event.inputs.gcp_project_id }}
      GCS_BUCKET: vyos-images-v1
    steps:
      - name: Checkout vyos-build repository
        uses: actions/checkout@v4
        with:
          repository: vyos/vyos-build
          path: vyos-build

      - name: Build VyOS ISO
        run: |
         sudo docker run --rm --privileged -v $(pwd)/vyos-build:/vyos -w /vyos vyos/vyos-build:current bash -c "sudo ./build-vyos-image generic --architecture amd64"
         

      - name: Prepare GCE-compatible tar.gz
        run: |
          cd vyos-build/build
          echo "Checking for built VyOS image..."
          ls -lh

          # Find the raw image (usually a .raw or .img)
          RAW_FILE=$(ls vyos-*.raw vyos-*.img 2>/dev/null | head -n 1)
          if [ -z "$RAW_FILE" ]; then
            echo "No raw disk image found. Check build logs."
            exit 1
          fi

          echo "Found disk: $RAW_FILE"
          echo "Renaming to disk.raw and packaging..."
          mv "$RAW_FILE" disk.raw
          TAR_FILE="vyos-$(date +%Y%m%d%H%M)-gce.tar.gz"
          tar -czf "$TAR_FILE" disk.raw
          ls -lh "$TAR_FILE"     
      
      # - name: Convert ISO to tar.gz
      #   run: |
      #     cd vyos-build/build
      #     echo "Fixing permissions..."
      #     sudo chown -R $USER:$USER .
      #     echo "Looking for ISO..."
      #     ls -l
      #     ISO_FILE=$(ls vyos-*.iso | head -n 1)
      #     if [ -z "$ISO_FILE" ]; then
      #       echo "No ISO file found in $(pwd)"
      #       exit 1
      #     fi
          
      #     TAR_FILE="${ISO_FILE%.iso}.tar.gz"
      #     echo \"Compressing $ISO_FILE into $TAR_FILE\"
      #     sudo tar -czvf "$TAR_FILE" "$ISO_FILE"
          
#      - name: Upload VyOS ISO
#        uses: actions/upload-artifact@v4
#        with:
#          name: vyos-nightly-iso
#          path: vyos-build/build/*.iso
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          
      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Upload VyOS ISO tarball to GCS
        run: |
          cd vyos-build/build
          FILE=$(ls vyos-*.tar.gz | head -n 1)
          echo \"Uploading $FILE to gs://${GCS_BUCKET}/\"
          gsutil cp "$FILE" "gs://${GCS_BUCKET}/"

